-------------------------------------------- SCREEN 000
(                        <12/ 2/87>140) 
                                        
\ LOAD FIRST TIME                       
                                        
APPENDIX CREATE A2MARK                  
MAIN     CREATE  2MARK                  
                                        
                                        
141 142 THRU                            
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                               ( FAH  ) 
-------------------------------------------- SCREEN 001
( LOADBLOCK              <10/26/86>141) 
                                        
\ load scr 140 first time through       
                                        
APPENDIX FORGET A2MARK CREATE A2MARK    
MAIN     FORGET  2MARK CREATE  2MARK    
                                        
' <ABORT> CFA ' BRK-RETN !              
                                        
  145 149 THRU \ compiler words         
  150 189 THRU \ routine source         
  190 199 THRU \ @FILE 2@FILE           
                                        
APPENDIX CREATE A3MARK                  
MAIN     CREATE  3MARK                  
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
-------------------------------------------- SCREEN 002
( LOADBLOCK 2            <10/28/86>142) 
                                        
\ this section loads the runtime code   
                                        
APPENDIX FORGET A3MARK CREATE A3MARK    
MAIN     FORGET  3MARK CREATE  3MARK    
                                        
                                        
  200 209 THRU \ primitives             
  210 223 THRU \ run card words         
  230 245 THRU \ BBALL                  
  224     LOAD \ MENU-HI LEVEL          
                                        
  270 274 THRU \ SWAP-BSM               
                                        
APPENDIX FORGET A3MARK CREATE A3MARK    
MAIN                                    
                                        
                                        
                                        
                                        
                                        
                                        
                                        
-------------------------------------------- SCREEN 003
( AUTOBOOT               <12/ 2/87>143) 
                                        
                                        
                                        
REVECTOR START INTO START-SYS           
REVECTOR START INTO BRK-RETN            
REVECTOR EXIT INTO  LOGO                
REVECTOR MYDISKERR INTO DISKERR         
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
-------------------------------------------- SCREEN 005
( TABLE                  <10/16/86>145) 
                                        
\ PALIGN                                
                                        
CREATE EXTBL \ room for 70 routines     
 80 ALLOT                               
                                        
                                        
\ jump is vectored to point to the      
\ routine to execute by runcode         
SUBR runrout \ [181-117]  \ 3           
  0 JMP,                  \ 178-117     
S;                                      
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                               ( FAH  ) 
-------------------------------------------- SCREEN 006
( runcode                <10/22/86>146) 
                                        
\ run code pointed by >PRO              
\ until 0 is found                      
SUBR runcode \ [32-168]      \ 6        
  BEGIN, 0 # LDY,            \ 2        
   >PRO )Y LDA, 0= NOT       \ 4        
  WHILE,                     \ <2       
   .A ASL, TAY,              \  2 2     
   EXTBL ,Y LDA,             \  4       
   runrout 1+ STA,           \  4       
   EXTBL 1+ ,Y LDA,          \  4       
   runrout 2+ STA,           \  4       
\M music JSR,                \  --      
   runrout JSR,              \  181-117 
   >PRO INC, 0= NOT          \  5       
   IF, 0 CMP,                \  <2 3 3> 
   ELSE, >PRO 1+ INC, THEN,  \  <3 5>   
\M DELEND 4 - JSR,           \  20      
  REPEAT,                    \  3>      
  RTS, S;                    \ <3 6>    
                                        
                                        
                               ( FAH  ) 
-------------------------------------------- SCREEN 007
( RUNCODE                <10/22/86>147) 
HEX                                     
\ execute routine number in A           
CODE <RUNCODE> \ [74-168]    \ 6        
\ copy pointer to code start to zp      
  FFE8 LDX, N STX,           \ 4 3      
  FFE9 LDX, N 1+ STX,        \ 4 3      
\ find start for routine N              
  .A ASL, TAY,               \ 2 2      
  N )Y LDA, >PRO STA, INY,   \ 5 3 2    
  N )Y LDA, >PRO 1+ STA,     \ 5 3      
  runcode JMP, C;            \ 32-168   
                                        
\ execute code routine N (1-?)          
CODE RUNCODE ( N -- )                   
  XSAVE STX, BOT LDA,                   
  ' <RUNCODE> JSR,                      
  XSAVE LDX, POP JMP, C;                
                                        
DECIMAL                                 
                                        
                                        
                                        
                               ( FAH  ) 
-------------------------------------------- SCREEN 008
( 2RUNCODE               <10/22/86>148) 
HEX                                     
\ execute routine number in A           
\ which is loaded into bank 2           
\ note this routine does not have       
\      to be timed out as it is only    
\      used to hold basic menu setup    
CODE 2RUNCODE ( N -- )                  
   XSAVE STX, BOT LDA,                  
\ switch to bank 2                      
   C08B LDX, C08B LDX,                  
\ copy pointer to code start to zp      
   DFE8 LDX, N STX,                     
   DFE9 LDX, N 1+ STX,                  
\ find start for routine N              
   .A ASL, TAY,                         
   N )Y LDA, >PRO STA, INY,             
   N )Y LDA, >PRO 1+ STA,               
   runcode JSR,                         
\ back to bank 1                        
   C083 LDX, C083 LDX,                  
   XSAVE LDX, POP JMP, C;               
DECIMAL                                 
                               ( FAH  ) 
-------------------------------------------- SCREEN 009
( ROUTINE:               <10/22/86>149) 
                                        
\ compiles tables does not use heads    
\ sets extbl entry N to point to        
\ where code starts                     
                                        
VARIABLE RELOAD? \ if non-zero set DP   
\ to point to previous value            
                                        
: ROUTINE: ( n -- ; n:1-?)              
  2* EXTBL + RELOAD? @                  
  IF @ DUP CONTEXT @ U< NOT             
   ABORT" CAN'T RELOAD"                 
   DP !                                 
  ELSE HERE SWAP !                      
  THEN                                  
  ASSEMBLER [COMPILE] ASSEMBLER         
  MEM !CSP ;                            
                                        
: R; ASSEMBLER ?CSP ;                   
                                        
: RELOAD ( N -- )                       
  ?NUM 1 RELOAD? ! LOAD ;               
                               ( FAH  ) 
-------------------------------------------- SCREEN 010
( ROUTINE NOTES          <10/17/86>150) 
                                        
EXIT ---------- notes ------------ EXIT 
                                        
The following routines are the          
ones that acutually run the "program"   
                                        
They are called by runcode and must     
meet the following conditions:          
                                        
- All routines are entered with 3       
  clocks used since the last music JSR, 
  NOT including the JSR, They must use  
  117 clocks after the last music       
  Call, again counting the RTS          
- All registers may be altered          
  alter zero page values with caution   
- >PRO points to the opcode byte.       
  When the code returns >PRO must       
  point to the last byte of data        
  (don't change it if no data)          
  >PRO is inc'd by 1 by runcode         
  when the routine returns              
                               ( FAH  ) 
-------------------------------------------- SCREEN 011
( USESFULL ROUTINES      <10/19/86>151) 
                                        
\ enter with A set to item# to find     
\ (1-?) and Y set to the list index     
\ (0=graphics, 2=music, 4=text 6=code)  
\ returns lo byte of item adress in A   
\ and hibyte in X, uses n,n+1           
                                        
HEX SUBR getptr \ [44]         \ 6      
  0FFE2 ,Y LDX, N STX, INY,    \ 4 3 2  
  0FFE2 ,Y LDX, N 1+ STX,      \ 4 3    
  .A ASL, TAY,                 \ 2 2    
  INY, N )Y LDA, TAX,          \ 2 4 2  
  DEY, N )Y LDA,               \ 2 4    
  RTS,                         \ 6      
S;                                      
DECIMAL                                 
                                        
                                        
                                        
                                        
                                        
                                        
                               ( FAH  ) 
-------------------------------------------- SCREEN 012
( skipargs               <10/16/86>152) 
                                        
\ adds A to >PRO (to skip data)         
\ If entered with JMP can be used       
                                        
                                        
\ jmp time: 25 jsr time: 28             
SUBR skipargs               \ 6 or 3    
  CLC, >PRO ADC,            \ 2 3       
  >PRO STA, >PRO 1+ LDA,    \ 3 3       
  # 0 ADC, >PRO 1+ STA,     \ 2 3       
  RTS,                      \ 6         
S;                                      
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                               ( FAH  ) 
-------------------------------------------- SCREEN 013
( 1: GRAPHIC             <10/20/86>153) 
\ args: X , Y , N C,                    
\ draw graphic n at X Y                 
                                        
1 ROUTINE:   \ [178-117]        \ 6     
   # 1 LDY,                     \ 2     
   >PRO )Y LDA, FX STA,         \ 2 5 4 
   INY, >PRO )Y LDA, FX 1+ STA, \ 2 5 4 
   INY, >PRO )Y LDA, FY STA,    \ 2 5 4 
   INY, >PRO )Y LDA, FY 1+ STA, \ 2 5 4 
\ get figure number                     
   INY, >PRO )Y LDA,            \ 2 5   
   # 0 LDY,                     \ 2     
   getptr JSR,                  \ 44    
   GFIG STA, GFIG 1+ STX,       \ 3 3   
\M DELEND 26 - JSR,             \ 646   
   drawfig JSR,                 \ 6-6   
\M DELEND 36 - JSR,             \ 84    
   # 5 LDA,                     \ 2     
   skipargs JMP,                \ 25    
R;                                      
                                        
                                        
                               ( FAH  ) 
-------------------------------------------- SCREEN 014
( 2: MESSAGE             <10/20/86>154) 
\ args: X , Y , N C,                    
\ print message n at X Y                
                                        
2 ROUTINE:   \ [178-117]      \ 6       
   # 1 LDY,                   \ 2       
   >PRO )Y LDA, GX STA,         \ 2 5 4 
   INY, >PRO )Y LDA, GX 1+ STA, \ 2 5 4 
   INY, >PRO )Y LDA, GY STA,    \ 2 5 4 
   INY, >PRO )Y LDA, GY 1+ STA, \ 2 5 4 
   INY, >PRO )Y LDA, # 4 LDY, \ 2 5 2   
   getptr JSR,                \ 44      
   0ADR STA, 0ADR 1+ STX,     \ 3 3     
   # 0 LDY, 0ADR )Y LDA,      \ 2 4     
   # 1 LDY, TAX,              \ 2 2     
\M 0 CMP, DELEND 21 - JSR,    \ 3 54    
\M music JSR,                 \ --      
\M DELEND 20 - JSR,           \ 52      
   gtype 2+ JSR,              \ 129-73  
\M 0 CMP, DELEND 1- JSR,      \ 3 14    
   # 5 LDA,                   \ 2       
   skipargs JMP,              \ 25      
R;                                      
                               ( FAH  ) 
-------------------------------------------- SCREEN 015
( 3: MUSIC               <10/20/86>155) 
\ args: N C,                            
\ Set pointers to play tune n           
                                        
3 ROUTINE:   \ [114]          \ 6       
   # 1 LDY,                   \ 2       
   >PRO )Y LDA, # 2 LDY,      \ 5 4     
   getptr JSR,                \ 44      
   >MUS STA, >MUS 1+ STX,     \ 3 3     
   # 1 LDA, MPER STA,         \ 2 3     
   MDUR STA,                  \ 3       
   # 3 LDA, MCNT STA,         \ 2 3     
   # 198 LDA, music STA,      \ 2 4     
   # 10 LDA, MDLP STA,        \ 2 4     
   >PRO INC, 0= NOT           \ 5       
   IF, 0 CMP,                 \ <2 3 3> 
   ELSE, >PRO 1+ INC, THEN,   \ <3 5>   
   0 CMP, NOP,                \ 3 2     
   RTS,                       \ 6       
                                        
                                        
                                        
                                        
                               ( FAH  ) 
-------------------------------------------- SCREEN 016
( 4-7: BAR's n BUB's     <10/16/86>156) 
\ args: X , Y , X , Y ,                 
\ see scr 275 for notes                 
                                        
4 ROUTINE: \ white bar                  
5 ROUTINE: \ black bar                  
6 ROUTINE: \ white bubble               
7 ROUTINE: \ black bubble               
   # 1 LDY, \ [178-117]          \ 6 2  
        >PRO )Y LDA, LX1 STA,    \ 5 4  
   INY, >PRO )Y LDA, LX1 1+ STA, \ 11   
   INY, >PRO )Y LDA, LY1 STA,    \ 11   
   INY, 0 CMP,                   \ 2 3  
   INY, >PRO )Y LDA, LX2 STA,    \ 11   
   INY, >PRO )Y LDA, LX2 1+ STA, \ 11   
   INY, >PRO )Y LDA, LY2 STA,    \ 11   
   INY, 0 CMP, 0 CMP,           \ 2 3 3 
   # 0 LDY, >PRO )Y LDA,         \ 2 5  
\ A has excode number                   
                                        
\ MORE...                               
                                        
                                        
                                        
-------------------------------------------- SCREEN 017
( 4-7: BAR's n BUB's cont<10/20/86>157) 
                                        
\ [92]                                  
\ now branch to the right routine       
   # 6 CMP, CS NOT ( < 6 ?) \ 2         
   IF,                      \ <2        
\M  0 CMP, DELEND 35 - JSR, \  3 82     
\M  music JSR,              \  --       
\M  0 CMP,                  \  3        
    # 4 CMP, 0=             \  2        
    IF, 0 CMP,              \  <2 3     
     wbar JSR,              \ 171-53 3> 
    ELSE, NOP,              \  <3 2     
     bbar JSR,              \   171-53  
     0 CMP, THEN,           \   3>      
\M  DELEND 8 - JSR,         \  28       
    # 8 LDA, skipargs JMP,  \  2 25     
    RTS,                    \  6>       
   THEN,                    \ <3>       
                                        
\ MORE...                               
                                        
                                        
                               ( FAH  ) 
-------------------------------------------- SCREEN 018
( 4-7: BAR's n BUB's cont<10/17/86>158) 
                                        
\ [97]                                  
\ now do the bubbles                    
\ flags still valid from last CMP,      
 ( # 6 CMP, ) 0=            \           
   IF, NOP, NOP,            \ <2 2 2    
    wbub JSR,               \  78-59 3> 
   ELSE, 0 CMP,             \ <3 3      
    bbub JSR,               \  78-59    
\M  0 CMP, THEN,            \  3>       
\M  DELEND 9 - JSR,         \  30       
   # 8 LDA, skipargs JMP,   \  25       
                                        
R;                                      
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                               ( FAH  ) 
-------------------------------------------- SCREEN 019
( 8-11: HOOKS            <10/19/86>159) 
\ args: X , X , Y , l , r ,             
\ see scr 275 for notes                 
                                        
 8 ROUTINE: \ black left hook           
 9 ROUTINE: \ black right hook          
10 ROUTINE: \ white left hook           
11 ROUTINE: \ white rigth hook          
   # 1 LDY, \ [178-117]          \ 6 2  
        >PRO )Y LDA, LX1 STA,    \ 5 4  
   INY, >PRO )Y LDA, LX1 1+ STA, \ 11   
   INY, >PRO )Y LDA, LX2 STA,    \ 11   
   INY, >PRO )Y LDA, LX2 1+ STA, \ 11   
   INY, >PRO )Y LDA, LY1 STA,    \ 11   
   INY,                          \ 2    
   INY, >PRO )Y LDA, hlinc STA,  \ 11   
   INY, >PRO )Y LDA, hrinc STA,  \ 11   
   # 0 LDY, >PRO )Y LDA,         \ 2 5  
\ A has excode number                   
                                        
\ MORE...                               
                                        
                                        
                               ( FAH  ) 
-------------------------------------------- SCREEN 020
( 8-11: HOOKS cont.      <10/17/86>160) 
                                        
\ [92]                                  
\ now branch to the right routine       
   # 10 CMP, CS NOT ( <10 ?) \ 2        
   IF,                     \ <2         
    # 8 CMP, 0=            \  2         
    IF, 0 CMP,             \  <2 3      
     blhook JSR,           \   78-14 3> 
    ELSE, NOP,             \  <3 2      
     brhook JSR,           \   78-14    
     0 CMP, THEN,          \   3>       
\M   0 CMP,                \  3         
\M   DELEND 29 - JSR,      \  70        
     # 8 LDA,              \  2         
     skipargs JMP,         \  25>       
   THEN,                   \ <3>        
                                        
\ MORE...                               
                                        
                                        
                                        
                                        
                               ( FAH  ) 
-------------------------------------------- SCREEN 021
( 8-11: HOOKS cont.      <10/21/86>161) 
                                        
\ [97]                                  
\ now do the bubbles                    
\ flags still valid from last CMP,      
 ( # 10 CMP, ) 0=          \            
   IF, NOP, NOP,           \ <2 2 2     
    wlhook JSR,            \  78-14 3>  
   ELSE,                   \ <3         
\M  0 CMP,                 \  3         
    wrhook JSR,            \  78-14     
\M  0 CMP,                 \  3>        
   THEN,                                
\M 0 CMP,                  \ 3          
\M DELEND 29 - JSR,        \ 70         
   # 8 LDA,                \ 2          
   skipargs JMP,           \ 25         
                                        
R;                                      
                                        
                                        
                                        
                                        
                               ( FAH  ) 
-------------------------------------------- SCREEN 022
( 12: VDINIT             <10/17/86>162) 
\ ARGS: none                            
\ Set view draw page to page 1          
                                        
12 ROUTINE: \ [114]         \ 6         
   vdinit JSR,              \ 33        
\M 0 CMP, DELEND 27 - JSR,  \ 3 66      
   RTS,                     \ 6         
R;                                      
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                               ( FAH  ) 
-------------------------------------------- SCREEN 023
( 13: COPYV              <10/20/86>163) 
\ ARGS: none                            
\ Copy view page to alternate page      
\ set draw page to alternate page       
13 ROUTINE: \ [178-117]     \ 6         
\M 0 CMP,                   \ 3         
\M DELEND 66 - JSR,         \ 144       
   copyv JSR,               \ 25-28     
\M 0 CMP,                   \ 3         
\M DELEND 34 - JSR,         \ 80        
   RTS,                     \ 6         
R;                                      
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
-------------------------------------------- SCREEN 024
( 14: VDALT              <10/17/86>163) 
\ ARGS: none                            
\ swap both view and draw pages         
                                        
14 ROUTINE: \ [114]         \ 6         
   valt JSR,                \ 38        
   dalt JSR,                \ 34        
\M DELEND 6 - JSR,          \ 30        
   RTS,                     \ 6         
R;                                      
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
-------------------------------------------- SCREEN 025
( 15: VDPAGE             <10/17/86>165) 
\ ARGS: none                            
\ Set view page to current draw page    
                                        
15 ROUTINE: \ [114]         \ 6         
   vdpage JSR,              \ 38        
\M DELEND 26 - JSR,         \ 64        
   RTS,                     \ 6         
R;                                      
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                               ( FAH  ) 
-------------------------------------------- SCREEN 026
( 16: DVPAGE             <10/17/86>166) 
\ ARGS: none                            
\ Set draw page to current view page    
                                        
16 ROUTINE: \ [114]         \ 6         
   dvpage JSR,              \ 34        
\M DELEND 28 - JSR,         \ 68        
   RTS,                     \ 6         
R;                                      
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                               ( FAH  ) 
-------------------------------------------- SCREEN 027
( 17-18: TNORM, TINV     <10/17/86>167) 
\ ARGS: none                            
\ Text is normal (white on black)       
                                        
17 ROUTINE: \ TNORM \ [114]             
18 ROUTINE: \ TINV         \ 6          
   # 0 LDY,                \ 2          
   \ get opcode number                  
   >PRO )Y LDA,            \ 4          
   # 17 CMP, 0=            \ 2          
   IF, # 0 LDA,            \ <2 2 3>    
   ELSE, # 127 LDA,        \ <3 2       
\M   NOP,                  \  2>        
   THEN,                                
   TCLR STA,               \ 3          
\M DELEND 36 - JSR,        \ 84         
   RTS,                    \ 6          
R;                                      
                                        
                                        
                                        
                                        
                                        
                               ( FAH  ) 
-------------------------------------------- SCREEN 028
( 19: WAIT               <10/20/86>168) 
\ args: n ,                             
\ wait n mucyls (200clks each)          
\ 5100 is approx 1 SEC                  
                                        
SUBR wait \ [152-40]        \ 6         
  BEGIN,                                
   DELEND 67 - JSR,        \ 146        
   music JSR,              \ --         
   DELEND 1- JSR,          \ 14         
   SEC, N LDA, # 1 SBC,    \ 2 3 2      
   N STA, N 1+ LDA,        \ 3 3        
   # 0 SBC, N 1+ STA,      \ 2 3        
  CS NOT UNTIL,            \ 3/2        
  RTS, S;                  \ 6          
                                        
19 ROUTINE: \ [178-117]    \ 6          
  # 1 LDY,                 \ 2          
  >PRO )Y LDA, N STA, INY, \ 5 3 2      
  >PRO )Y LDA, N 1+ STA,   \ 5 3        
  wait JSR,                \ 152-40     
  DELEND 19 - JSR,         \ 50         
  # 2 LDA, skipargs JMP,   \ 2 25       
R;                                      
-------------------------------------------- SCREEN 029
( 20: CLEAR              <10/20/86>169) 
\ args: none                            
\ clears current draw screen            
\ ******************************        
\ *** MUSIC CALLS NOT IN cls ***        
\ ******************************        
                                        
20 ROUTINE: \ [178-117]    \ 6          
   cls JMP,                             
R;                                      
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                               ( FAH  ) 
-------------------------------------------- SCREEN 030
( 21: VALT               <10/17/86>170) 
\ ARGS: none                            
\ swap view draw page                   
                                        
21 ROUTINE: \ [114]         \ 6         
   valt JSR,                \ 38        
\M 0 CMP,                   \ 3         
\M DELEND 26 - JSR,         \ 64        
   RTS,                     \ 6         
R;                                      
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                               ( FAH  ) 
-------------------------------------------- SCREEN 031
( 22: DALT               <10/17/86>171) 
\ ARGS: none                            
\ swap view draw page                   
                                        
22 ROUTINE: \ [114]         \ 6         
   dalt JSR,                \ 34        
\M 0 CMP,                   \ 3         
\M DELEND 28 - JSR,         \ 68        
   RTS,                     \ 6         
R;                                      
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                               ( FAH  ) 
-------------------------------------------- SCREEN 032
( 23: SETWIN             <10/17/86>172) 
\ args: X , Y , X , Y ,                 
\ Set draw window (X VALS IN BYTES)     
                                        
23 ROUTINE: \ [114]                     
   # 1 LDY,                  \ 6 2      
   >PRO )Y LDA, MINX STA,    \ 5 3      
   INY, INY,                 \ 2 2      
   >PRO )Y LDA, MINY STA,    \ 5 3      
   INY, INY,                 \ 2 2      
   >PRO )Y LDA, MAXX STA,    \ 5 3      
   INY, INY,                 \ 2 2      
   >PRO )Y LDA, MAXY STA,    \ 5 3      
\M 0 CMP,                    \ 3        
\M DELEND 10 - JSR,          \ 32       
   # 8 LDA,                  \ 2        
   skipargs JMP,             \ 25       
                                        
R;                                      
                                        
                                        
                                        
                                        
                                        
-------------------------------------------- SCREEN 033
( 24: FULLWIN            <10/17/86>173) 
\ args: none                            
\ Set draw window to full screen        
                                        
24 ROUTINE: \ [114]          \ 6        
   #   0 LDA, MINX STA,      \ 2 3      
   #   0 LDA, MINY STA,      \ 2 3      
   #  40 LDA, MAXX STA,      \ 2 3      
   # 192 LDA, MAXY STA,      \ 2 3      
\M DELEND 35 - JSR,          \ 82       
   RTS,                      \ 6        
                                        
                                        
R;                                      
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
-------------------------------------------- SCREEN 034
( 25: 1START             <10/20/86>174) 
\ args: N ,                             
\ Set loop count for loop 1             
                                        
\ loop1 parameters cnt , adr ,          
XVARIABLE 1LC 2 ALLOT                   
                                        
25 ROUTINE: \ [114]           \ 6       
   # 1 LDY,                   \ 2       
   >PRO )Y LDA, 1LC STA, INY, \ 5 4 2   
   >PRO )Y LDA, 1LC 1+ STA,   \ 5 4     
   # 2 LDA,                   \ 2       
   skipargs JSR,              \ 28      
   >PRO LDA, 1LC 2+ STA,      \ 4 4     
   >PRO 1+ LDA, 1LC 3 + STA,  \ 4 4     
\M DELEND 11 - JSR,           \ 34      
   RTS,                       \ 6       
                                        
                                        
                                        
                                        
                                        
                                        
                               ( FAH  ) 
-------------------------------------------- SCREEN 035
( 26: 1LOOP              <10/19/86>175) 
\ args: N ,                             
\ Dec loop count if non-zero jmp        
                                        
26 ROUTINE: \ [114]           \ 6       
   1LC LDA, SEC, # 1 SBC,     \ 4 2 2   
   1LC STA, 1LC 1+ LDA,       \ 4 4     
   # 0 SBC, 1LC 1+ STA,       \ 2 4     
   CS NOT \ if borrow don't loop        
   IF,                        \ <2      
    DELEND JSR,               \  12 3>  
   ELSE,                      \ <3      
    1LC 2 + LDA, >PRO STA,    \  4 3    
    1LC 3 + LDA, >PRO 1+ STA, \  4 3>   
   THEN,                                
\M 0 CMP, DELEND 24 - JSR,    \ 3 60    
   RTS,                       \ 6       
R;                                      
                                        
                                        
                                        
                                        
                                        
                               ( FAH  ) 
-------------------------------------------- SCREEN 036
( 27: DGRAPHIC           <10/22/86>176) 
\ args: X , Y , N C,                    
\ draw graphic n loaded in bank 2       
HEX                                     
1B ROUTINE:  \ [178-117]        \ 6     
   # 1 LDY,                     \ 2     
   >PRO )Y LDA, FX STA,         \ 2 5 4 
   INY, >PRO )Y LDA, FX 1+ STA, \ 2 5 4 
   INY, >PRO )Y LDA, FY STA,    \ 2 5 4 
   INY, >PRO )Y LDA, FY 1+ STA, \ 2 5 4 
\ get figure number                     
   INY, >PRO )Y LDA,            \ 2 5   
   .A ASL, TAY,                 \ 2 2   
   DFE2 LDA, N STA,             \ 4 3   
   DFE3 LDA, N 1+ STA,          \ 4 3   
   N )Y LDA, GFIG STA, INY,     \ 5 3 2 
   N )Y LDA, GFIG 1+ STA,       \ 5 3   
\M 0 CMP, DELEND 1F - JSR,      \ 3 74  
   drawfig JSR,                 \ 6-6   
\M DELEND 24 - JSR,             \ 84    
   # 5 LDA,                     \ 2     
   skipargs JMP,                \ 25    
R;                                      
DECIMAL                        ( FAH  ) 
-------------------------------------------- SCREEN 037
( 28: 2GRAPHIC           <10/22/86>177) 
\ args: X , Y , N C,                    
\ switch to bank 2, draw, switch back   
HEX                                     
1C ROUTINE: \ [178-117]         \ 6     
   # 1 LDY,                     \ 2     
   >PRO )Y LDA, FX STA,         \ 2 5 4 
   INY, >PRO )Y LDA, FX 1+ STA, \ 2 5 4 
   INY, >PRO )Y LDA, FY STA,    \ 2 5 4 
   INY, >PRO )Y LDA, FY 1+ STA, \ 2 5 4 
   INY, >PRO )Y LDA,            \ 2 5   
   C08B LDX, C08B LDX,          \ 4 4   
   .A ASL, TAY,                 \ 2 2   
   DFE2 LDA, N STA,             \ 4 3   
   DFE3 LDA, N 1+ STA,          \ 4 3   
   N )Y LDA, GFIG STA, INY,     \ 5 3 2 
   N )Y LDA, GFIG 1+ STA,       \ 5 3   
\M 0 CMP, DELEND 1B - JSR,      \ 3 66  
   drawfig JSR,                 \ 6-6   
\M DELEND 20 - JSR,             \ 84    
   C083 LDA, C083 LDA,          \ 4 4   
   # 5 LDA, skipargs JMP,       \ 2 25  
R;                                      
DECIMAL                                 
-------------------------------------------- SCREEN 038
( 29: REDRAW             <10/23/86>178) 
\ args: N C,       ,                    
\ draw graphic at FX,FY                 
                                        
29 ROUTINE:   \ [178-117]       \ 6     
   # 1 LDY,                     \ 2     
\ get figure number                     
   >PRO )Y LDA,                 \ 5     
   # 0 LDY,                     \ 2     
   getptr JSR,                  \ 44    
   GFIG STA, GFIG 1+ STX,       \ 3 3   
\M 0 CMP, DELEND 46 - JSR,      \ 3 104 
   drawfig JSR,                 \ 6-6   
\M DELEND 36 - JSR,             \ 84    
   # 1 LDA,                     \ 2     
   skipargs JMP,                \ 25    
R;                                      
                                        
                                        
                                        
                                        
                                        
                                        
                                        
-------------------------------------------- SCREEN 039
( 30: ADDFX              <10/23/86>179) 
\ args: N C,                            
\ add N to FX                           
                                        
30 ROUTINE:   \ [114]         \ 6       
   # 1 LDY,                   \ 2       
   >PRO )Y LDA,               \ 5       
   CLC, FX ADC, FX STA,       \ 2 4 4   
   FX 1+ LDA, # 0 ADC,        \ 4 2     
   FX 1+ STA,                 \ 4       
\M DELEND 21 - JSR,           \ 54      
   # 1 LDA,                   \ 2       
   skipargs JMP,              \ 25      
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                               ( FAH  ) 
-------------------------------------------- SCREEN 040
( MACRO FOR SCR 181      <10/24/86>180) 
                                        
APPENDIX                                
                                        
GET-A&E                                 
: GBASE)Y-STA,'S \ ( N -- )             
  GET-A&E ASSEMBLER                     
  1- 0                                  
  DO GBASE )Y STA, INY,                 
  LOOP                                  
  GBASE )Y STA, ;                       
                                        
MAIN                                    
                                        
EXIT -----                              
                                        
Above will compile the phrase           
GBASE )Y STA, INY, n-1 times            
followed by GBASE )Y STA,               
which will take a grand total of        
n*8-2 clocks                            
                                        
                                        
                                        
-------------------------------------------- SCREEN 041
( 31: CLRBEAR            <10/24/86>181) 
\ args: none                            
\ erase 84,45 to 189, 150 real fast     
                                        
31 ROUTINE:   \ [178-117]      \ 6      
   NOP, NOP, NOP,              \ 2 2 2  
   # 45 LDX,  \ start y value  \ 2      
   BEGIN,                               
    yaddr JSR,                 \ 42     
    # 128 LDA, \ value to store \ 2     
    # 12 LDY, \ start x val    \ 2      
    15 GBASE)Y-STA,'S          \ 118    
\M  music JSR,                 \ --     
\M  0 CMP, 0 CMP, NOP, NOP,    \ 10     
    INX, # 150 CPX, 0=         \ 2 2    
   UNTIL,                      \ 3/2    
\M 0 CMP, DELEND 40 - JSR,     \ 3 92   
   RTS,                        \ 6      
                                        
R;                                      
                                        
                                        
                                        
                               ( FAH  ) 
-------------------------------------------- SCREEN 042
( 32: CLRELF             <10/25/86>182) 
                                        
                                        
\ clear from byte 18 to end of line     
\ starting at X ending with N           
                                        
SUBR clrelf \ [162-30]         \ 6      
   BEGIN, yaddr JSR,           \ 42     
    # 128 LDA, # 18 LDY,       \ 2 2    
\M  DELEND 49 - JSR,           \ 110    
\M  music JSR,                 \ --     
    21 GBASE)Y-STA,'S          \ 166    
\M  0 CMP, DELEND JSR,         \ 3 12   
\M  music JSR,                 \ --     
\M  DELEND 1- JSR, 0 CMP,      \ 3 14   
    INX, N CPX, 0=             \ 2 3    
   UNTIL,                      \ 3/2    
   RTS,                        \ 6      
S;                                      
                                        
                                        
                                        
                                        
                                        
-------------------------------------------- SCREEN 043
( 32: CLRELF             <10/25/86>182) 
\ args: none                            
\ erase 126,141-280,141 and             
\ 126,178-280,185 real fast             
                                        
32 ROUTINE:   \ [178-117]   \ 6         
   # 141 LDA, N STA,        \ 2 3       
   # 123 LDX,               \ 2         
\M 0 CMP,                   \ 3         
   clrelf JSR,              \ 162-30    
\M 0 CMP, DELEND 68 - JSR,  \ 3 148     
\M music JSR,               \ --        
\M DELEND JSR,              \ 12        
   # 185 LDA, N STA,        \ 2 3       
   # 178 LDX,               \ 2         
   clrelf JSR,              \ 162-30    
\M 0 CMP, DELEND 33 - JSR,  \ 3 78      
   RTS,                     \ 6         
                                        
R;                                      
                                        
                                        
                                        
                                        
-------------------------------------------- SCREEN 050
( RWSEC# READFILE        <10/20/86>190) 
                                        
\ sectors are number 0-559              
\ start sec#=blk#/4                     
                                        
: RWSEC# ( ADR SEC# R/W N -- )          
  >R >R >R 6 0                          
  R> 16 /MOD R> R> RWTS ;               
                                        
\ if non-zero flip between pages        
\ every FLIPRATE sectors                
VARIABLE FLIPRATE                       
                                        
VARIABLE CURFLIP                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
-------------------------------------------- SCREEN 051
( readfile               <10/21/86>191) 
                                        
HEX                                     
\ patched into forth RWTS interface     
\ word <DOSRWTS> at B65E                
                                        
SUBR readfile                           
  B7F1 DEC,  \ replaced instruction     
  CURFLIP DEC, 0=                       
  IF, CURFLIP 1+ STA,                   
   FLIPRATE LDA, CURFLIP STA,           
\ code of valt                          
   VPAGE LDA, 0=                        
   IF, C055 LDA, # 1 LDA,               
   ELSE, C054 LDA, # 0 LDA, NOP,        
   THEN,                                
   VPAGE STA,                           
   CURFLIP 1+ LDA,                      
  THEN,                                 
  RTS, S;                               
                                        
DECIMAL                                 
                                        
                               ( FAH  ) 
-------------------------------------------- SCREEN 052
( READFILE               <10/28/86>192) 
HEX                                     
VARIABLE FR/W 1 FR/W !                  
                                        
: READFILE ( ADR SEC# N -- )            
  FLIPRATE @ ?DUP                       
  IF CURFLIP !                          
   20 B6C7 C! S' readfile B6C8 !        
   FR/W @ SWAP RWSEC#                   
   CE B6C7 C! B7F1 B6C8 !               
  ELSE \ make sure patch removed        
   CE B6C7 C! B7F1 B6C8 !               
   FR/W @  SWAP RWSEC#                  
  THEN ;                                
                                        
DECIMAL                                 
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                               ( FAH  ) 
-------------------------------------------- SCREEN 053
( @FILE                  <10/21/86>193) 
                                        
\ reads file N into memory (0-40)       
\ return lowest address used in         
\ lower memory                          
HEX \ **** DOES NOT SWAP BSM ****       
: @FILE ( N -- ADR )                    
   6 * PAD + >R \ dir table entery      
   PAD 0C 1 1 RWSEC# \ get directory    
   100 R@ 2+ C@ - 100 *  \ source adr   
   R@ @                  \ sec #, read  
   R@ 2+ C@ READFILE     \ #secs        
   R@ 3 + @              \ part 2?      
   IF                                   
    B6 R@ 5 + C@ - 100 * \ source adr   
    DUP                                 
    R@ 3 + @             \ sec #, read  
    R@ 5 + C@ READFILE   \ #secs        
   ELSE B600 THEN                       
   R> DROP                              
   1 FR/W ! ;                           
DECIMAL                                 
                                        
                                        
-------------------------------------------- SCREEN 054
( ADJPTRS                <10/22/86>194) 
\ given the load address of             
\ a pointer adjust a subpointers        
\ to be correct for the new location    
\ in bank 2                             
                                        
\ adjust pointer at adr                 
: OFFPTR ( ADR -- )                     
  DUP @ 8192 - SWAP ! ;                 
                                        
: ADJPTRS ( ADR -- )                    
\ adjust the pointer                    
  DUP OFFPTR @                          
\ now lets fix all the subpointers      
  DUP OFFPTR DUP @ >R                   
  2+ \ point to first entry             
  BEGIN DUP OFFPTR                      
    DUP 2+ SWAP @ R@ =                  
  UNTIL                                 
  R> DDROP ;                            
                                        
                                        
                                        
                               ( FAH  ) 
-------------------------------------------- SCREEN 055
( 2@FILE                 <10/28/86>195) 
                                        
HEX \ **** DOES NOT SWAP BSM ****       
: 2@FILE ( N -- )                       
   R1-W1 2 BSM !                        
\  2 BSM! will cause RESET to R2-W2     
   6 * PAD + >R \ dir table entery      
   PAD 0C 1 1 RWSEC# \ get directory    
   R@ 2+ C@ 10 >                        
   ABORT" 2@FILE: too large!"           
   E0 R@ 2+ C@ - 100 *    \ source adr  
   R@ @                   \ sec #       
   R> 2+ C@ READFILE      \ #secs       
   DFE8 ADJPTRS \ code                  
   DFE6 ADJPTRS \ text                  
   DFE4 ADJPTRS \ music                 
   DFE2 ADJPTRS \ graphics              
   R2-W2                                
   1 FR/W !                             
; DECIMAL                               
                                        
                                        
                                        
                               ( FAH  ) 
-------------------------------------------- SCREEN 056
(                        <10/28/86>196) 
                                        
                                        
: MYDISKERR                             
  12 1012 +!                            
  BEGIN AGAIN                           
;                                       
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                               ( FAH  ) 
-------------------------------------------- SCREEN 060
( getyn                  <10/26/86>200) 
                                        
XVARIABLE YNFR 500 YNFR !               
\ every YNFR music cycles call valt     
\ so that music animation will continue 
                                        
VARIABLE SEED                           
\ inc'd while waiting for response      
                                        
                                        
EXIT --------- notes ---------- EXIT    
                                        
clear keyboard strobe then start        
looking for Y or N, while swapping      
view pages to provide animation         
                                        
returns A=Upper case version of the     
character pressed                       
                                        
                                        
                                        
                                        
                                        
                                        
-------------------------------------------- SCREEN 061
( getyn                  <10/26/86>201) 
SUBR getyn  \ [8-17]         \ 6        
  BEGIN, BEGIN, NOP,         \ 2        
\M  music JSR,               \ --       
\M  0 CMP, 0 CMP, 0 CMP, NOP, \ 11      
    49168 LDA, \ clear kb    \ 4        
    YNFR LDA, N STA,         \ 4 3      
    YNFR 1+ LDA, N 1+ STA,   \ 4 3      
    wait JSR,                \ 152-40   
    valt JSR,                \ 38       
\M  0 CMP, DELEND 44 - JSR,  \ 3 100    
\M  music JSR,               \ --       
\M  0 CMP, DELEND JSR,       \ 3 12     
    YNFR LDA, N STA,         \ 4 3      
    YNFR 1+ LDA, N 1+ STA,   \ 4 3      
    wait JSR,                \ 152-40   
    valt JSR,                \ 38       
    SEED INC, 0=             \ 5        
    IF, 0 CMP,               \ <2 3 3>  
    ELSE, SEED 1+ INC, THEN, \ <3 5>    
\M  0 CMP, DELEND 33 - JSR,  \ 3 78     
    49152 LDA, 0< \ key?     \ 4        
   UNTIL,                    \ 3/2      
\ MORE...                               
-------------------------------------------- SCREEN 062
( getyn cont...          <10/26/86>202) 
                                        
                                        
   0 CMP,                     \ 3       
\M music JSR,                 \ --      
   # 95 AND,                  \ 2       
   # 78 CMP, 0=               \ 2       
   IF,                        \ <2      
    0 CMP, NOP,               \  3 2    
    RTS,                      \  6>     
   THEN,                      \ <3>     
   # 89 CMP, 0=               \ 2       
   IF,                        \ <2      
    RTS,                      \  6>     
   THEN,                      \ <3>     
\M DELEND 77 - JSR,           \ 166     
  AGAIN,                      \ 3       
                                        
S;                                      
                                        
                                        
                                        
                                        
                               ( FAH  ) 
-------------------------------------------- SCREEN 063
( GINPUT prims           <10/26/86>203) 
                                        
  0 CONSTANT ESC? \ 1= ESC in GINPUT    
    XVARIABLE MAXCNT                    
  0 XCONSTANT INADR                     
260 CONSTANT GIRM \ right margin        
                                        
                                        
X: CURDEL                               
  800 0 DO QTERM IF LEAVE THEN LOOP X;  
                                        
: CURSOR                                
  BEGIN QTERM NOT                       
  WHILE GX @ DUP LX1 ! 6 + LX2 !        
   GY @ DUP LY1 ! 8 + LY2 !             
   S' TCLR C@ 0=                        
   IF S' wbar CALL CURDEL               
    S' bbar CALL CURDEL                 
   ELSE S' bbar CALL CURDEL             
    S' wbar CALL CURDEL THEN            
  REPEAT ;                              
                                        
                                        
                               ( FAH  ) 
-------------------------------------------- SCREEN 064
( GINPUT prims           <10/28/86>204) 
                                        
X: ^CHAR ( -- ADR )                     
  INADR DUP C@ + 1+ X;                  
                                        
X: DELCHAR ( -- )                       
  INADR C@ \ if there are chars         
  IF -1 INADR +C!                       
   GX @ LX2 ! GY @ 10 + LY2 !           
   ^CHAR C@ 2* ASCTAB + @               
   270 + ASCTAB + C@ DX + ( width )     
   NEGATE GX +!                         
   GX @ LX1 ! GY @ LY1 !                
   S' TCLR C@ 0=                        
   IF S' bbar CALL                      
   ELSE S' wbar CALL THEN               
  THEN X;                               
                                        
                                        
                                        
                                        
                                        
                                        
                               ( FAH  ) 
-------------------------------------------- SCREEN 065
( GINPUT prims           <10/28/86>205) 
                                        
X: VALKEY? ( C -- T/F; t=val char )     
   DUP 31 > OVER 127 < AND              
   IF 2* ASCTAB + @ 0= NOT              
   ELSE DROP 0 THEN                     
X;                                      
                                        
X: !CHAR ( C -- )                       
   ^CHAR C! 1 INADR +C! X;              
                                        
X: NOROOM? ( -- T/F; t=str full)        
   INADR C@ MAXCNT @ < NOT X;           
                                        
X: OFFRT? ( -- T/F; t=past right mar)   
   GX @ GIRM < NOT X;                   
                                        
CODE GEMIT ( C -- )                     
  XSAVE STX, BOT LDA,                   
  gemit JSR,                            
  XSAVE LDX, POP JMP,                   
C;                                      
                                        
                               ( FAH  ) 
-------------------------------------------- SCREEN 066
( GINPUT                 <10/28/86>206) 
                                        
\ input string of max chars to adr      
\ return if esc pressed, false if       
\ esc pressed                           
: GINPUT ( adr max -- T/F)              
  MAXCNT C! X' INADR !                  
  0 INADR C! ?TERMINAL DROP             
  BEGIN CURSOR KEY >R                   
   R@ 27 = ESC? AND                     
   IF R> DROP 0 EXIT THEN               
   R@ 8 = R@ 127 = OR                   
   IF DELCHAR                           
   ELSE R@ VALKEY? NOT                  
    NOROOM? OR OFFRT? OR NOT            
    IF R@ !CHAR R@ GEMIT THEN           
   THEN                                 
   R> 13 =                              
  UNTIL                                 
  1                                     
;                                       
                                        
                                        
                               ( FAH  ) 
-------------------------------------------- SCREEN 067
( RANDOM TOUC UC=        <10/26/86>207) 
                                        
\ seed is defined earlier so that       
\ it may be incremented by getyn        
\ while waiting for a response to       
\ give a better looking random          
                                        
                                        
: RANDOM ( N -- I; 0<=i<n )             
   SEED @ U* SWAP DROP                  
   SEED @ 27517 U*                      
   2311 0 D+ DROP SEED ! ;              
                                        
: TOUC ( C -- )                         
  DUP ASCII a - 26 U<                   
  IF 32 - THEN ;                        
                                        
: UC=                                   
  TOUC SWAP TOUC = ;                    
                                        
                                        
                                        
                                        
                               ( FAH  ) 
-------------------------------------------- SCREEN 068
( ^MESS# GTYPE           <10/26/86>208) 
                                        
\ return the address of message         
\ number n, ( 1<=n<? )                  
                                        
CODE ^MESS# ( N -- ADR )                
  XSAVE STX,                            
  BOT LDA, # 4 LDY,                     
  getptr JSR, N STX,                    
  XSAVE LDX, BOT STA,                   
  N LDA, BOT 1+ STA,                    
  NEXT JMP, C;                          
                                        
CODE GTYPE ( ADR CNT -- )               
  SEC LDA, 0ADR STA,                    
  SEC 1+ LDA, 0ADR 1+ STA,              
  BOT LDA, XSAVE STX,                   
  TAX, gtype JSR,                       
  XSAVE LDX,                            
  POPTWO JMP,                           
C;                                      
                                        
                                        
                               ( FAH  ) 
-------------------------------------------- SCREEN 070
( OPENING                <10/28/86>210) 
                                        
X: OPENING                              
  S' vdinit CALL S' cls CALL HG         
\ load menu basic                       
  0 FLIPRATE ! 3 2@FILE                 
\ do opening scene 1                    
  0 @FILE 1 RUNCODE                     
\ do opening scene 2                    
  7 FLIPRATE ! 1 @FILE 1 RUNCODE        
\ do opening scene 3                    
  2 @FILE 1 RUNCODE                     
X;                                      
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
-------------------------------------------- SCREEN 071
( CLOSING                <10/28/86>211) 
                                        
XCODE <CLOSING> ( -- Y/N )              
   XSAVE STX, getyn JSR,                
   XSAVE LDX, DEX, DEX, BOT STA,        
   # 0 LDA, BOT 1+ STA,                 
   NEXT JMP, XC;                        
                                        
CODE <CLEND>                            
  XSAVE STX, # 0 LDA, N STA,            
  # 20 LDA, N 1+ STA,                   
  wait JSR, valt JSR,                   
  XSAVE LDX, NEXT JMP, C;               
                                        
: CLOSING                               
  0 S' TCLR C!                          
  0 @FILE 2 RUNCODE                     
  <CLOSING> ASCII N =                   
  IF 15 1012 +C!                        
   BEGIN <CLEND> AGAIN                  
  THEN                                  
;                                       
                                        
                               ( FAH  ) 
-------------------------------------------- SCREEN 072
( MENU                   <10/26/86>212) 
                                        
VARIABLE ROUT#                          
\ must be set to 2 by the starting      
\ code, on exit, it is the routine      
\ number that was selected (3-6)        
\ 8 means go to closing                 
                                        
EXIT ----------------------------- EXIT 
                                        
the following code routines are         
defined in the menu file:               
                                        
1 sets up scene, bends                  
2 prints Y/N box                        
3 shakes/asks for bears                 
4 shakes/asks for parade                
5 shakes/asks for ball                  
6 shakes/asks for elves                 
7 asks for card maker                   
8 like 1 but no music                   
9 erases Y/N box                        
10 draw scene for card                  
                               ( FAH  ) 
-------------------------------------------- SCREEN 073
( <MENU>                 <10/26/86>213) 
                                        
XCODE <MENU>                            
  XSAVE STX, \ ROUT# INC, next present  
\ display scene, start music, bend      
  # 1 LDA, ' <RUNCODE> JSR,             
 BEGIN, \ display present, ask          
   ROUT# LDA,                \ 4        
   ' <RUNCODE> JSR,          \ 74-168   
   0 CMP, 0 CMP, 0 CMP,      \ 3 3 3    
   NOP, NOP,                 \ 2 2      
   music JSR,                \ --       
   0 CMP, DELEND 45 - JSR,   \ 3 102    
\ display prompt                        
   # 2 LDA, ' <RUNCODE> JSR, \ 2 74-168 
\ get response                          
   0 CMP, NOP,               \ 3 2      
   getyn JSR, PHA,           \ 8-17 3   
\ erase prompt                          
   0 CMP, DELEND 35 - JSR,   \ 3 82     
   # 9 LDA, ' <RUNCODE> JSR, \ 2 74-168 
                                        
                                        
                               ( FAH  ) 
-------------------------------------------- SCREEN 074
( <MENU> cont            <10/28/86>214) 
\ [168]                                 
\ now lets look at answer               
   PLA, # 89 CMP, 0=         \ 4 2      
   IF, \ kill music, and return         
    # 96 LDA, music STA,                
    XSAVE LDX, NEXT JMP, THEN, \ <3>    
   NOP, NOP, music JSR,      \ 2 2 --   
\ inc and check if at end               
   ROUT# INC,                \ 6        
   ROUT# LDA, # 7 CMP, 0=    \ 4 2      
   IF, \ kill music, and return         
     # 96 LDA, music STA,               
    XSAVE LDX, NEXT JMP, THEN, \ <3>    
\ go down for anther present            
   DELEND 39 - JSR,          \ 90       
   # 8 LDA, ' <RUNCODE> JSR, \ 2 74-168 
   0 CMP, 0 CMP, 0 CMP,      \ 3 3 3    
   NOP, NOP,                 \ 2 2      
   music JSR,                \ --       
   DELEND 44 - JSR,          \ 100      
  AGAIN,                     \ 3        
XC;                                     
                               ( FAH  ) 
-------------------------------------------- SCREEN 075
( BEARS                  <10/28/86>215) 
APPENDIX                                
: "                                     
  34 WORD C@ 1+ ALLOT ;                 
MAIN                                    
                                        
XCREATE ORIGMESS                        
  " Happy Holidays!"                    
CREATE YOURORIG 81 ALLOT                
XCREATE MESS 81 ALLOT                   
XVARIABLE DLEN                          
                                        
EXIT --------- notes ------------- EXIT 
                                        
The bears scenes are set as follows     
                                        
1   : Draw frame, branches, on invis    
2   : Ask for your message              
3-10: Dance steps 1-8                   
11  : Double spin (space)               
12  : bow                               
                                        
                                        
                               ( FAH  ) 
-------------------------------------------- SCREEN 076
( bearstep               <10/26/86>216) 
                                        
\ given char in accum, return routine   
\ number to run in accum                
                                        
SUBR bearstep                           
\ space's always get rout 11            
  # 32 CMP, 0= ( space?)                
  IF, # 11 LDA, RTS, THEN,              
\ now check for bow (last char .?!)     
  DLEN LDX, # 1 CPX, 0=                 
  IF, # 46 CMP, ( . ) 0= NOT            
   IF, # 33 CMP, ( ! ) 0= NOT           
    IF, # 63 CMP, ( ? ) 0= NOT          
     IF, \ if not . ! or ?              
      \ just return based on char       
      # 7 AND, CLC, # 3 ADC, RTS,       
   THEN, THEN, THEN,                    
   # 12 LDA, RTS, ( bow step )          
  THEN,                                 
  \ not last, char                      
  # 7 AND, CLC, # 3 ADC, RTS,           
S;                                      
                                        
-------------------------------------------- SCREEN 077
( <BEARDANCE>            <10/28/86>217) 
XVARIABLE SX                            
\ run dlen steps from 0ADR              
\ with special logic for BL and end     
XCODE <BEARDANCE>                       
  XSAVE STX,                            
  BEGIN, # 0 LDY,                       
   0ADR )Y LDA, ( char )                
   PHA, GX LDA, SX STA,                 
   GX 1+ LDA, SX 1+ STA,                
   PLA, PHA, gemit JSR,                 
   dalt JSR, SX LDA, GX STA,            
   SX 1+ LDA, GX 1+ STA,                
   PLA, PHA, gemit JSR, dalt JSR,       
   PLA, bearstep JSR,                   
   ' <RUNCODE> JSR,                     
\ make sure music is dead               
   # 96 LDA, music STA,                 
   0ADR INC, 0=                         
   IF, 0ADR 1+ INC, THEN,               
   DLEN DEC, 0=                         
  UNTIL,                                
  XSAVE LDX, NEXT JMP,                  
XC;                            ( FAH  ) 
-------------------------------------------- SCREEN 078
( BEARDANCE              <10/28/86>218) 
XVARIABLE SLEN                          
X: STRLEN ( ADR CNT -- LEN )            
  0 SLEN ! 0                            
  DO DUP C@ 2* ASCTAB + @ 270 +         
   ASCTAB + C@ DX + SLEN +! 1+ LOOP     
  DROP SLEN @ X;                        
                                        
X: BEARDANCE ( ADR -- )                 
  MESS C@ ?DUP                          
  IF DLEN !                             
   MESS 1+ S' 0ADR !                    
    15 LX1 ! 270 LX2 !                  
   168 LY1 ! 179 LY2 !                  
   S' bbar CALL                         
   S' valt CALL S' copyv CALL           
   0 S' TCLR C!                         
   140 MESS COUNT STRLEN 2/ -           
   GX ! 168 GY !                        
   <BEARDANCE>                          
  THEN                                  
X;                                      
                                        
                               ( FAH  ) 
-------------------------------------------- SCREEN 079
( BEARS BEAROPEN         <10/28/86>219) 
                                        
X: <BEARS> ( ADR -- )                   
  DUP C@ 1+ MESS SWAP CMOVE             
  6 @FILE                               
  1 RUNCODE \ draw frame                
  BEGIN                                 
   BEARDANCE                            
   1 RUNCODE \ draw frame               
   2 RUNCODE \ ask for your message     
   15 GX ! 170 GY !                     
   1 ' ESC? ! 0 S' TCLR C!              
   MESS 80 GINPUT 0= ( ESC )            
  UNTIL X;                              
                                        
X: BEARS                                
  ORIGMESS <BEARS> X;                   
                                        
: BEAROPEN                              
  YOURORIG <BEARS> ;                    
                                        
                                        
                                        
                               ( FAH  ) 
-------------------------------------------- SCREEN 080
( PARADE                 <10/28/86>220) 
                                        
XVARIABLE AN# ( anagram # )             
                                        
X: PARADE                               
   5 @FILE 8 RANDOM 1+ AN# !            
   1 RUNCODE \ draw screen              
   30 GX ! 57 GY !                      
   AN# @ 8 + ^MESS# COUNT GTYPE         
   BEGIN 110 LX1 ! 200 LX2 !            
    57 LY1 ! 68 LY2 ! S' wbar CALL      
    110 GX ! 1 ' ESC? !                 
    PAD 9 0 FILL                        
    PAD 8 GINPUT \ answer input?        
    IF 1 AN# @ ^MESS#                   
     PAD C@ 1+ 0                        
     DO DUP I + C@ PAD I + C@ UC= NOT   
      IF SWAP NOT SWAP LEAVE THEN       
     LOOP DROP                          
    ELSE 1 ( pressed ESC ) THEN         
   UNTIL                                
   2 RUNCODE \ do the parade            
X;                                      
                               ( FAH  ) 
-------------------------------------------- SCREEN 081
( ELVES MAKER            <10/28/86>221) 
                                        
\ vectored latter                       
: MAKER                                 
  NOOP ;                                
                                        
EXIT                                    
                                        
X: ELVES                                
   7 @FILE 1 RUNCODE                    
   0 FLIPRATE !                         
   8 @FILE 1 RUNCODE                    
X;                                      
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
-------------------------------------------- SCREEN 084
( MENU                   <10/28/86>224) 
                                        
: CASE: : DOES> SWAP 2* + @ EXECUTE ;   
                                        
CASE: DOPRES                            
  BEARS PARADE PLAYBALL MAKER           
;                                       
                                        
: MENU                                  
  BEGIN 7 FLIPRATE !                    
   4 @FILE <MENU>                       
   7 FLIPRATE !                         
   ROUT# @ 3 - DOPRES                   
   1 ROUT# +!                           
   ROUT# @ 6 > DUP NOT                  
   IF 1 2RUNCODE THEN                   
  UNTIL ;                               
                                        
: START                                 
  BEGIN 3 ROUT# !                       
   OPENING MENU CLOSING                 
  AGAIN                                 
;                                       
                                        
-------------------------------------------- SCREEN 090
( BBALL VARIABLES        <10/28/86>230) 
                                        
  0 XCONSTANT BX \ current ball pos     
  0 XCONSTANT BY                        
                                        
    XVARIABLE LBX \ last ball pos       
    XVARIABLE LBY                       
                                        
  0 XCONSTANT BDX \ ball speed          
  4 XCONSTANT BDY                       
                                        
 90 XCONSTANT DTOP \ dribble params     
128 XCONSTANT DBOT                      
  0 XCONSTANT DF?                       
                                        
  0 XCONSTANT FN                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                               ( FAH  ) 
-------------------------------------------- SCREEN 091
( DRBALL ERBALL          <10/28/86>231) 
HEX                                     
X: DRAWFIG  ( X Y N -- ; 1<=n<? )       
  OVER -40 <                            
  IF DROP DDROP EXIT THEN               
  2* FFE2 @ \ graphics start            
  + @ [ GFIG ] LITERAL !                
  FY ! FX !                             
  [ drawfig ] LITERAL CALL X; DECIMAL   
                                        
XCREATE OP 8 ALLOT                      
X: LFIG ( N -- ADR )                    
   0= NOT 4 * OP + X;                   
X: DRBALL ( -- ; draw ball )            
   BX BY FN LFIG D! FN NOT X' FN !      
   BX BY 5 DRAWFIG X;                   
X: ERBALL ( -- ; erase ball )           
   FN LFIG D@ 16 DRAWFIG X;             
                                        
X: THUMP 2 0                            
   DO 20 0 DO NOOP LOOP                 
    49200 C@ DROP                       
   LOOP X;                              
                               ( FAH  ) 
-------------------------------------------- SCREEN 092
( DDRIB                  <10/28/86>232) 
                                        
X: ?QTERM ( -- )                        
  QTERM 0= NOT DF? AND X;               
                                        
X: MBALL                                
   ERBALL DRBALL                        
   S' valt CALL S' dalt CALL X;         
                                        
X: DDRIB ( -- ; dribble down )          
   BEGIN ?QTERM NOT BDY 0> AND          
   WHILE BDY X' BY +!                   
    BY DBOT < NOT                       
    IF BDY NEGATE X' BDY ! THUMP        
     DBOT X' BY ! THEN                  
    MBALL                               
   REPEAT                               
X;                                      
                                        
                                        
                                        
                                        
                                        
                               ( FAH  ) 
-------------------------------------------- SCREEN 093
( UDRIB DRIBBLE          <10/28/86>233) 
                                        
X: UDRIB ( -- ; dribble up )            
   BEGIN ?QTERM NOT BDY 0< AND          
   WHILE BDY X' BY +! BY DTOP <         
    IF BDY NEGATE X' BDY !              
     DTOP X' BY ! THEN                  
    MBALL                               
   REPEAT                               
X;                                      
                                        
X: DRIBBLE                              
  1 X' DF? !                            
  BEGIN QTERM NOT                       
  WHILE DDRIB UDRIB                     
  REPEAT X;                             
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                               ( FAH  ) 
-------------------------------------------- SCREEN 094
( POSISTION              <10/28/86>234) 
                                        
XVARIABLE RN#                           
                                        
X: POSITION                             
  1 RUNCODE ( draw frame )              
  RN# @ RUNCODE ( say posistion ball )  
  17 RN# !                              
  10 10 DDUP OP D! OP 4 + D!            
  12 X' BX ! DTOP X' BY ! 5 X' BDY !    
  BEGIN DRIBBLE KEY                     
   DUP 8 = ( left arrow? )              
   IF BX 4 - 12 MAX X' BX ! THEN        
   DUP 21 = ( right arrow? )            
   IF BX 4 + 160 MIN X' BX ! THEN       
   13 =                                 
  UNTIL                                 
  0 X' DF? ! DDRIB UDRIB                
  MBALL MBALL                           
X;                                      
                                        
                                        
                                        
                               ( FAH  ) 
-------------------------------------------- SCREEN 095
( DERIVED INT TRIG FUNCS <10/28/86>235) 
XVARIABLE #XS                           
X: TRM ( ? )                            
   #XS @ SWAP / NEGATE                  
   10000 */ 10000 + X;                  
X: {SIN} ( ? )                          
   DUP DUP 10000 */ #XS !               
   10000 72 TRM 42 TRM 20 TRM 6 TRM     
   10000 */ X;                          
X: ?MIRROR ( ? )                        
   DUP 90 >                             
   IF 180 SWAP - THEN X;                
X: REDUCE ( ? )                         
   360 MOD DUP 0< IF 360 + THEN         
   DUP 180 <                            
   IF ?MIRROR                           
   ELSE 180 - ?MIRROR NEGATE            
   THEN X;                              
X: ISIN ( N -- SIN*10000 )              
   REDUCE 17543 100 */ {SIN} X;         
X: ICOS ( N -- COS*10000 )              
   360 MOD 90 SWAP - ISIN X;            
                                        
                               ( FAH  ) 
-------------------------------------------- SCREEN 096
( GETNUM                 <10/28/86>236) 
                                        
 0 XCONSTANT GMIN                       
99 XCONSTANT GMAX                       
   XVARIABLE GVAL                       
X: GETNUM ( -- N )                      
  2 MAXCNT C! PAD X' INADR ! 0 GVAL !   
  0 INADR C! ?TERMINAL DROP             
  BEGIN CURSOR KEY >R                   
   R@ 8 = R@ 127 = OR                   
   IF INADR C@ DELCHAR                  
    IF GVAL @ 10 / GVAL ! THEN          
   ELSE R@ 48 - 10 U< NOROOM? 0= AND    
    IF R@ ASCII 0 - GVAL @ 10 * +       
     DUP GMAX > NOT                     
     IF GVAL ! R@ !CHAR R@ GEMIT        
     ELSE DROP THEN                     
    THEN                                
   THEN                                 
   GVAL @ GMIN < NOT                    
   GVAL @ GMAX > NOT AND                
   R> 13 = AND                          
  UNTIL                                 
  GVAL @ X;                    ( FAH  ) 
-------------------------------------------- SCREEN 097
( SHOT VARIABLES         <10/28/86>237) 
                                        
0 XCONSTANT SANG                        
0 XCONSTANT SPOW                        
0 XCONSTANT RISE                        
0 XCONSTANT SRUN                        
-7 XCONSTANT GRAV                       
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                               ( FAH  ) 
-------------------------------------------- SCREEN 098
( SPARAMS                <10/28/86>238) 
                                        
\ input shot parameters                 
                                        
X: SPARAMS                              
  S' dvpage CALL S' dalt CALL           
  10 LX1 ! 160 LY1 !                    
  270 LX2 ! 185 LY2 ! S' bbar CALL      
  S' valt CALL S' copyv CALL            
  3 RUNCODE ( ask for angle )           
  25 X' GMIN ! 80 X' GMAX !             
  GETNUM X' SANG !                      
  S' dalt CALL                          
  4 RUNCODE ( ask for speed )           
  1 X' GMIN ! 10 X' GMAX !              
  GETNUM 3 2 */ 1+ X' SPOW !            
X;                                      
                                        
                                        
                                        
                                        
                                        
                                        
                               ( FAH  ) 
-------------------------------------------- SCREEN 099
( <COL?>                 <10/26/86>239) 
0 XCONSTANT HIT?                        
                                        
\ check LX1,LY1 to LX2,LY2              
\ if any non-zero bits, sets COL?       
                                        
XCODE <COL?>                            
  XSAVE STX, lsetup JSR,                
  # 1 LDA, X' HIT? STA, LY1 LDX,        
  BEGIN, yaddr JSR, lloff LDY,          
\  check left remainde                  
   llimsk LDA, GBASE )Y AND, INY,       
   # 127 AND, 0= NOT                    
   IF, XSAVE LDX, NEXT JMP, THEN,       
\  check all bytes in between           
   BEGIN, lroff CPY, 0= NOT             
   WHILE, GBASE )Y LDA, INY,            
    # 127 AND, 0= NOT                   
    IF, XSAVE LDX, NEXT JMP, THEN,      
   REPEAT,                              
                                        
\ MORE..                                
                                        
                               ( FAH  ) 
-------------------------------------------- SCREEN 100
( <COL?> cont..          <10/28/86>240) 
                                        
                                        
\  check right remainder                
   lrimsk LDA, GBASE )Y AND,            
   # 127 AND, 0= NOT                    
   IF, XSAVE LDX, NEXT JMP, THEN,       
\  go the next line                     
   INX, LY2 CPX, 0=                     
  UNTIL,                                
\ if we made it all the way here then   
\ there is no collision                 
  # 0 LDA, X' HIT? STA,                 
  XSAVE LDX, NEXT JMP,                  
XC;                                     
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                               ( FAH  ) 
-------------------------------------------- SCREEN 101
( COL?                   <10/28/86>241) 
                                        
X: COL? ( -- T/F; t=BX,BY will hit)     
   BX DUP LX1 ! 28 + LX2 !              
   BY 4 MAX LY1 !                       
   BY 25 + 5 MAX LY2 !                  
   <COL?>                               
   HIT? X;                              
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                               ( FAH  ) 
-------------------------------------------- SCREEN 102
( MOVEBALL               <10/28/86>242) 
0 XCONSTANT XERR                        
0 XCONSTANT YERR                        
                                        
X: BNX SRUN 2 3 */ NEGATE X' SRUN !     
   XERR NEGATE X' XERR ! THUMP X;       
X: BNY RISE 3 4 */ NEGATE X' RISE !     
   YERR NEGATE X' YERR ! THUMP X;       
X: MOVEBALL                             
  SRUN XERR + 10 /MOD DUP 1 AND         
  IF 1- SWAP 10 + SWAP THEN             
  X' BX +! X' XERR !                    
  RISE NEGATE YERR +                    
  10 /MOD X' BY +! X' YERR !            
  BX 215 > BY 15 < AND COL? AND         
  IF BX 242 > SRUN 0> AND               
   IF BNX BX 238 MIN X' BX ! THEN       
   BX 238 < SRUN 0> AND                 
   IF BNX BX 214 MIN X' BX ! THEN       
   BY 4 > RISE 0< AND BX 213 > AND      
   IF BNY BY 4 MIN X' BY ! THEN         
  THEN X;                               
EXIT                                    
                               ( FAH  ) 
-------------------------------------------- SCREEN 103
( DOSHOT                 <10/28/86>243) 
                                        
X: DOSHOT                               
  POSITION SPARAMS                      
(  S' valt CALL ) S' copyv CALL         
  SPOW SANG ISIN 1000 */ X' RISE !      
  SPOW SANG ICOS 1000 */ X' SRUN !      
  4 S' MINY C!                          
  0 X' XERR ! 0 X' YERR !               
  BEGIN ERBALL MOVEBALL                 
   COL? NOT                             
  WHILE                                 
   DRBALL                               
   S' valt CALL S' dalt CALL            
   GRAV X' RISE +!                      
  REPEAT                                
  S' dalt CALL                          
  FN NOT X' FN ! ERBALL                 
  0 S' MINY C!                          
X;                                      
                                        
                                        
                                        
                               ( FAH  ) 
-------------------------------------------- SCREEN 104
( PLAYBALL               <10/28/86>244) 
: PLAYBALL                              
  7 @FILE 2 RN# ! S' dalt CALL          
  BEGIN DOSHOT                          
   BY 40 < RISE 0< AND \ made it ?      
   IF 6 RUNCODE ( good shot )           
   ELSE BY 75 < BY 39 > AND             
    SRUN 0> AND                         
    IF 5 RUNCODE ( hit sock )           
    ELSE BY DBOT >                      
     IF RISE 10 / ABS 4 + 0             
      DO -1 X' BY +! COL? 0=            
       IF LEAVE THEN                    
      LOOP THUMP DRBALL                 
     ELSE 190 DBOT 5 DRAWFIG THEN       
     18 RUNCODE ( tot mis)              
   THEN THEN ?TERMINAL DROP             
   BEGIN CURSOR KEY TOUC                
    DUP ASCII Y = OVER ASCII N = OR NOT 
   WHILE DROP REPEAT                    
   ASCII N =                            
  UNTIL ;                               
                                        
                               ( FAH  ) 
-------------------------------------------- SCREEN 110
( MUSIC COMPILER         <10/ 3/86>250) 
                                        
APPENDIX                                
2 CONSTANT NMUL                         
0 CONSTANT NOFF                         
1 CONSTANT NDEL                         
                                        
: RNUM BL WORD NUMBER DROP ;            
: NOTE                                  
  CREATE C,                             
  DOES> C@ RNUM RNUM                    
  >R 1- 12 * + NMUL * NOFF + C,         
  R> 3 * C,                             
  NDEL                                  
  IF 0 C, NDEL C, THEN                  
;                                       
                                        
: NDEF ( -- set default conditions )    
  2 TO NMUL 0 TO NOFF 1 TO NDEL ;       
                                        
MAIN                                    
                                        
                                        
                               ( FAH  ) 
-------------------------------------------- SCREEN 111
( NOTES                  <10/ 3/86>251) 
                                        
APPENDIX                                
                                        
 1 NOTE Ab                              
 2 NOTE A                               
 3 NOTE Bb                              
 4 NOTE B                               
 5 NOTE C                               
 6 NOTE Db                              
 7 NOTE D                               
 8 NOTE Eb                              
 9 NOTE E                               
10 NOTE F                               
11 NOTE Gb                              
12 NOTE G                               
                                        
MAIN                                    
                                        
                                        
                                        
                                        
                                        
                               ( FAH  ) 
-------------------------------------------- SCREEN 112
( PLAY MUSIC             <10/ 3/86>252) 
                                        
APPENDIX                                
                                        
CODE play                               
  XSAVE STX,                            
  BEGIN, DELEND 80 - JSR,   \ 172       
   music JSR,               \ 19        
   music LDA, # 96 CMP, 0=  \ 4 2       
  UNTIL,                    \ 3         
  XSAVE LDX,                            
  NEXT JMP,                             
C;                                      
                                        
: PLAY ( ADR -- )                       
  >MUS !                                
  1 MPER C! 3 MCNT C! 198 music C!      
  10 MDLP C! 1 MDUR C! play ;           
                                        
 MAIN                                   
                                        
                                        
                                        
                               ( FAH  ) 
-------------------------------------------- SCREEN 130
( copypage               <10/25/86>270) 
EXIT                                    
\ copy page X to aux bsm (D0-FF)        
\ A,Y destroyed                         
HEX CODE copypage                       
  C009 STA,           \ aux ZP/STK/BSM  
  0 # LDA,                              
  F1 STX, F0 STA,     \ set aux zp ptr  
  C008 STA,           \ main ZP/STK/BSM 
  F1 STX, F0 STA,     \ set main zp ptr 
  # 0 LDY,            \ loop counter    
  BEGIN,                                
   C008 STA, F0 )Y LDA, \ read main     
   C009 STA, F0 )Y STA, \ store aux     
   INY, 0=                              
  UNTIL,                                
  C008 STA,           \ main ZP/STK/BSM 
  RTS, C;                               
DECIMAL                                 
                                        
                                        
                                        
                                        
                               ( FAH  ) 
-------------------------------------------- SCREEN 131
( COPY-BSM               <10/25/86>271) 
EXIT                                    
\ copy main BSM to auxillary            
\ destroyes 240-241 (N,N+1)  in both    
\ main and auxillary memory             
\ leaves with main bank 1 BSM active    
                                        
HEX CODE COPY-BSM XSAVE STX,            
  C08B LDA, C08B LDA, \ r/w BSM bank 2  
  # D0 LDX,           \ starting page   
  BEGIN, ' copypage JSR,                
   INX, # E0 CPX, 0= UNTIL,             
  C083 LDA, C083 LDA, \ r/w BSM bank 1  
  # D0 LDX,           \ starting page   
  BEGIN, ' copypage JSR,                
   INX, # 00 CPX, 0= UNTIL,             
  XSAVE LDX, NEXT JMP, C;               
                                        
CODE COPY-ZP                            
  XSAVE STX,                            
  # 00 LDX, ' copypage JSR,             
  INX, ' copypage JSR,                  
  XSAVE LDX, NEXT JMP, C;               
DECIMAL                                 
-------------------------------------------- SCREEN 132
( swappage               <10/25/86>272) 
                                        
\ swap page X between aux/main BSM      
\ A,Y destroyed                         
HEX CODE swappage                       
  C009 STA,           \ aux ZP/STK/BSM  
  0 # LDA,                              
  F1 STX, F0 STA,     \ set aux zp ptr  
  C008 STA,           \ main ZP/STK/BSM 
  F1 STX, F0 STA,     \ set main zp ptr 
  # 0 LDY,            \ loop counter    
  BEGIN, C008 STA,                      
   F0 )Y LDA, TAX,    \ read main       
   C009 STA, F0 )Y LDA, \ read aux      
   C008 STA, F0 )Y STA, \ store main    
   C009 STA, TXA,                       
   F0 )Y STA,         \ store aux       
   INY, 0=                              
  UNTIL,                                
  C008 STA,           \ main ZP/STK/BSM 
  F1 LDX,             \ restore X       
  RTS, C;                               
DECIMAL                                 
                               ( FAH  ) 
-------------------------------------------- SCREEN 133
( SWAP-BSM               <10/25/86>273) 
\ SWAP main and auxillary BSM           
\ destroyes 240-241 (N,N+1)  in both    
\ main and auxillary memory             
\ leaves with main bank 1 BSM active    
                                        
HEX CODE SWAP-BSM                       
  XSAVE STX,                            
\ copy bank 1 BSM                       
  C08B LDA, C08B LDA, \ r/w BSM bank 2  
  # D0 LDX,           \ starting page   
  BEGIN, ' swappage JSR,                
   INX, # E0 CPX, 0= UNTIL,             
\ copy bank 2 and remainder of BSM      
  C083 LDA, C083 LDA, \ r/w BSM bank 1  
  # D0 LDX,           \ starting page   
  BEGIN, ' swappage JSR,                
   INX, # 00 CPX, 0= UNTIL,             
  XSAVE LDX,                            
  NEXT JMP,                             
C; DECIMAL                              
                                        
                                        
                               ( FAH  ) 
-------------------------------------------- SCREEN 134
( RUN MYBRK              <10/26/86>274) 
                                        
                                        
                                        
: RUN                                   
  96 S' music C!                        
  [COMPILE] ' HGR                       
  SWAP-BSM CFA EXECUTE                  
  SWAP-BSM E-B ;                        
                                        
                                        
: MYBRK                                 
  ." SWAP-BSM (Y/N)? "                  
  BEGIN KEY DUP ASCII Y =               
  OVER ASCII N = OR NOT                 
  WHILE DROP 7 EMIT REPEAT              
  ASCII Y =                             
  IF SWAP-BSM THEN                      
;                                       
                                        
' MYBRK CFA ' BRK-RETN !                
                                        
                                        
                                        
-------------------------------------------- SCREEN 135
( NOTES                  <10/16/86>275) 
                                        
When there are many routines that       
share the same setup procedures         
(that is the same arguments that go     
to the same variables) I set them up    
to all use the same routine.  When      
it comes time to call the acutal        
routine (which will, of course, vary    
depending on which routine was called)  
I can examine the opcode (>PRO ,Y LDA,  
with Y=0) and branch to the proper      
routine based on its value              
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                               ( FAH  ) 
-------------------------------------------- SCREEN 139
(                        <10/26/86>279) 
                                        
                                        
: RU2                                   
  FORGET-SYS [COMPILE] ' CFA            
  SWAP-BSM EXECUTE                      
  SWAP-BSM                              
;                                       
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                               ( FAH  ) 
